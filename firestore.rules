rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Posts collection
    match /posts/{postId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }

    // Products collection
    match /products/{productId} {
      allow read: if true;  // Allow public read access
      allow write: if request.auth != null && isAdmin();
    }

    // Library categories collection
    match /library-categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        isAdmin()
      );
      allow create: if request.auth != null;
      allow update: if request.auth != null && isAdmin();
      allow delete: if false;
    }

    // Stripe checkout sessions
    match /stripe_checkout_sessions/{sessionId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        isAdmin()
      );
      allow create: if request.auth != null;
      allow update: if false;
      allow delete: if false;
    }
  }
}